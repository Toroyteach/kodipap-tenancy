import React, { useState } from 'react';
import { Head, useForm } from '@inertiajs/react';
import AppLayout from '@/Layouts/AppLayout';
import { Button } from '@/Components/ui/button';
import { Card, CardContent, CardHeader, CardTitle, CardDescription, CardFooter } from '@/Components/ui/card';
import { Input } from '@/Components/ui/input';
import { Label } from '@/Components/ui/label';
import { Switch } from '@/Components/ui/switch';
import { Home, Bell, Shield, CreditCard, Save, MapPin, Lock } from 'lucide-react';

export default function SettingsPage({ auth, settings = {} }) {
    // Form states for property information
    const { data: propertyData, setData: setPropertyData, post: saveProperty } = useForm({
        property_name: settings.property_name || 'Green Valley Apartments',
        address: settings.address || '1234 Main St, Nairobi',
        total_units: settings.total_units || '120',
    });

    // Form state for notifications
    const { data: notificationData, setData: setNotificationData, post: saveNotifications } = useForm({
        payment_notifications: settings.payment_notifications || true,
        overdue_reminders: settings.overdue_reminders || true,
        sms_notifications: settings.sms_notifications || true,
        email_notifications: settings.email_notifications || true,
    });

    // Form state for payment integration
    const { data: paymentData, setData: setPaymentData, post: savePayment } = useForm({
        mpesa_shortcode: settings.mpesa_shortcode || '555555',
        mpesa_passkey: settings.mpesa_passkey || '',
        mpesa_consumer_key: settings.mpesa_consumer_key || '',
        mpesa_consumer_secret: settings.mpesa_consumer_secret || '',
    });

    // Form state for security
    const { data: securityData, setData: setSecurityData, post: saveSecurity } = useForm({
        current_password: '',
        new_password: '',
        confirm_password: '',
    });

    // Handle form submissions
    const handlePropertySubmit = (e) => {
        e.preventDefault();
        saveProperty(route('settings.property.update'), {
            preserveScroll: true,
            onSuccess: () => {
                // Show success message
            },
        });
    };

    const handleNotificationsSubmit = (e) => {
        e.preventDefault();
        saveNotifications(route('settings.notifications.update'), {
            preserveScroll: true,
            onSuccess: () => {
                // Show success message
            },
        });
    };

    const handlePaymentSubmit = (e) => {
        e.preventDefault();
        savePayment(route('settings.payment.update'), {
            preserveScroll: true,
            onSuccess: () => {
                // Show success message
            },
        });
    };

    const handleSecuritySubmit = (e) => {
        e.preventDefault();
        saveSecurity(route('settings.security.update'), {
            preserveScroll: true,
            onSuccess: () => {
                // Reset password fields on success
                setSecurityData({
                    ...securityData,
                    current_password: '',
                    new_password: '',
                    confirm_password: '',
                });
            },
        });
    };

    return (
        <AppLayout>
            <Head title="Settings" />
            <div className="container mx-auto p-6 space-y-6">
                <div className="mb-8">
                    <h1 className="text-2xl font-bold">Settings</h1>
                    <p className="text-muted-foreground">
                        Manage your account and application settings
                    </p>
                </div>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                    {/* Property Information Card */}
                    <Card className="h-full">
                        <CardHeader>
                            <div className="flex items-center space-x-2">
                                <Home className="h-5 w-5 text-primary" />
                                <CardTitle>Property Information</CardTitle>
                            </div>
                        </CardHeader>
                        <form onSubmit={handlePropertySubmit}>
                            <CardContent className="space-y-4">
                                <div className="space-y-2">
                                    <Label htmlFor="property_name">Property Name</Label>
                                    <Input
                                        id="property_name"
                                        value={propertyData.property_name}
                                        onChange={(e) => setPropertyData('property_name', e.target.value)}
                                        placeholder="Enter property name"
                                    />
                                </div>
                                <div className="space-y-2">
                                    <Label htmlFor="address">Address</Label>
                                    <div className="relative">
                                        <MapPin className="absolute left-3 top-3 h-4 w-4 text-muted-foreground" />
                                        <Input
                                            id="address"
                                            className="pl-10"
                                            value={propertyData.address}
                                            onChange={(e) => setPropertyData('address', e.target.value)}
                                            placeholder="Enter property address"
                                        />
                                    </div>
                                </div>
                                <div className="space-y-2">
                                    <Label htmlFor="total_units">Total Units</Label>
                                    <Input
                                        id="total_units"
                                        type="number"
                                        value={propertyData.total_units}
                                        onChange={(e) => setPropertyData('total_units', e.target.value)}
                                        placeholder="Enter total number of units"
                                    />
                                </div>
                            </CardContent>
                            <CardFooter className="border-t px-6 py-4">
                                <Button type="submit" className="w-full">
                                    <Save className="mr-2 h-4 w-4" />
                                    Save Changes
                                </Button>
                            </CardFooter>
                        </form>
                    </Card>

                    {/* Notifications Card */}
                    <Card className="h-full">
                        <CardHeader>
                            <div className="flex items-center space-x-2">
                                <Bell className="h-5 w-5 text-primary" />
                                <CardTitle>Notifications</CardTitle>
                            </div>
                            <CardDescription>Manage your notification preferences</CardDescription>
                        </CardHeader>
                        <form onSubmit={handleNotificationsSubmit}>
                        <CardContent className="space-y-4">
                            <div className="flex items-center justify-between">
                                <div>
                                    <Label>Payment Notifications</Label>
                                    <p className="text-sm text-muted-foreground">Get notified for payments</p>
                                </div>
                                <Switch
                                    checked={notificationData.payment_notifications}
                                    onCheckedChange={(checked) => setNotificationData('payment_notifications', checked)}
                                />
                            </div>
                            <div className="flex items-center justify-between pt-2">
                                <div>
                                    <Label>Overdue Reminders</Label>
                                    <p className="text-sm text-muted-foreground">Get reminders for overdue payments</p>
                                </div>
                                <Switch
                                    checked={notificationData.overdue_reminders}
                                    onCheckedChange={(checked) => setNotificationData('overdue_reminders', checked)}
                                />
                            </div>
                            <div className="flex items-center justify-between pt-2">
                                <div>
                                    <Label>SMS Notifications</Label>
                                    <p className="text-sm text-muted-foreground">Receive SMS notifications</p>
                                </div>
                                <Switch
                                    checked={notificationData.sms_notifications}
                                    onCheckedChange={(checked) => setNotificationData('sms_notifications', checked)}
                                />
                            </div>
                            <div className="flex items-center justify-between pt-2">
                                <div>
                                    <Label>Email Notifications</Label>
                                    <p className="text-sm text-muted-foreground">Receive email notifications</p>
                                </div>
                                <Switch
                                    checked={notificationData.email_notifications}
                                    onCheckedChange={(checked) => setNotificationData('email_notifications', checked)}
                                />
                            </div>
                        </CardContent>
                        <CardFooter className="border-t px-6 py-4">
                </Card>
            </div>
        </AppLayout>
    );
}
                        </div>
                        <CardDescription>Set up your payment gateway</CardDescription>
                    </CardHeader>
                    <form onSubmit={handlePaymentSubmit}>
                        <CardContent className="space-y-4">
                            <div className="space-y-2">
                                <Label htmlFor="mpesa_shortcode">M-Pesa Business Shortcode</Label>
                                <Input
                                    id="mpesa_shortcode"
                                    value={paymentData.mpesa_shortcode}
                                    onChange={(e) => setPaymentData('mpesa_shortcode', e.target.value)}
                                    placeholder="Enter M-Pesa shortcode"
                                />
                            </div>
                            <div className="space-y-2">
                                <Label htmlFor="mpesa_passkey">M-Pesa Passkey</Label>
                                <Input
                                    id="mpesa_passkey"
                                    type="password"
                                    value={paymentData.mpesa_passkey}
                                    onChange={(e) => setPaymentData('mpesa_passkey', e.target.value)}
                                    placeholder="Enter M-Pesa passkey"
                                />
                            </div>
                            <div className="space-y-2">
                                <Label htmlFor="mpesa_consumer_key">Consumer Key</Label>
                                <Input
                                    id="mpesa_consumer_key"
                                    value={paymentData.mpesa_consumer_key}
                                    onChange={(e) => setPaymentData('mpesa_consumer_key', e.target.value)}
                                    placeholder="Enter consumer key"
                                />
                            </div>
                            <div className="space-y-2">
                                <Label htmlFor="mpesa_consumer_secret">Consumer Secret</Label>
                                <Input
                                    id="mpesa_consumer_secret"
                                    type="password"
                                    value={paymentData.mpesa_consumer_secret}
                                    onChange={(e) => setPaymentData('mpesa_consumer_secret', e.target.value)}
                                    placeholder="Enter consumer secret"
                                />
                            </div>
                        </CardContent>
                        <CardFooter className="border-t px-6 py-4">
                            <Button type="submit" className="w-full">
                                <Save className="mr-2 h-4 w-4" />
                                Save Changes
                            </Button>
                        </CardFooter>
                    </form>
                </Card>

                {/* Security Card */}
                <Card>
                    <CardHeader>
                        <div className="flex items-center space-x-2">
                            <Shield className="h-5 w-5 text-primary" />
                            <CardTitle>Security</CardTitle>
                        </div>
                        <CardDescription>Update your password and security settings</CardDescription>
                    </CardHeader>
                    <form onSubmit={handleSecuritySubmit}>
                        <CardContent className="space-y-4">
                            <div className="space-y-2">
                                <Label htmlFor="current_password">Current Password</Label>
                                <Input
                                    id="current_password"
                                    type="password"
                                    value={securityData.current_password}
                                    onChange={(e) => setSecurityData('current_password', e.target.value)}
                                    placeholder="Enter current password"
                                />
                            </div>
                            <div className="space-y-2">
                                <Label htmlFor="new_password">New Password</Label>
                                <Input
                                    id="new_password"
                                    type="password"
                                    value={securityData.new_password}
                                    onChange={(e) => setSecurityData('new_password', e.target.value)}
                                    placeholder="Enter new password"
                                />
                            </div>
                            <div className="space-y-2">
                                <Label htmlFor="confirm_password">Confirm New Password</Label>
                                <Input
                                    id="confirm_password"
                                    type="password"
                                    value={securityData.confirm_password}
                                    onChange={(e) => setSecurityData('confirm_password', e.target.value)}
                                    placeholder="Confirm new password"
                                />
                            </div>
                        </CardContent>
                        <CardFooter className="border-t px-6 py-4">
                            <Button type="submit" className="w-full">
                                <Save className="mr-2 h-4 w-4" />
                                Update Password
                            </Button>
                        </CardFooter>
                    </form>
                </Card>
ardHeader>
            <CardContent>
                <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                    <div>
                        <Label className="text-sm font-medium text-gray-500">Application Version</Label>
                        <p className="text-lg font-semibold">v1.0.0</p>
                    </div>
                    <div>
                        <Label className="text-sm font-medium text-gray-500">Last Backup</Label>
                        <p className="text-lg font-semibold">Today</p>
                    </div>
                    <div>
                        <Label className="text-sm font-medium text-gray-500">Storage Used</Label>
                        <p className="text-lg font-semibold">1.2 GB / 10 GB</p>
                    </div>
                </div>
            </CardContent>
        </Card>
    </div>
);
                <CardFooter className="border-t px-6 py-4">
                    <Button type="submit">Save Changes</Button>
                </CardFooter>
            </form>
